<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c on kentxxq Blog</title><link>https://kentxxq.com/tags/c/</link><description>Recent content in c on kentxxq Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Mon, 04 Nov 2019 01:10:00 +0000</lastBuildDate><atom:link href="https://kentxxq.com/tags/c/index.xml" rel="self" type="application/rss+xml"/><item><title>补充一些数据结构的知识</title><link>https://kentxxq.com/contents/%E8%A1%A5%E5%85%85%E4%B8%80%E4%BA%9B%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E7%9F%A5%E8%AF%86/</link><pubDate>Mon, 04 Nov 2019 01:10:00 +0000</pubDate><guid>https://kentxxq.com/contents/%E8%A1%A5%E5%85%85%E4%B8%80%E4%BA%9B%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E7%9F%A5%E8%AF%86/</guid><description>在之前做爬虫练手的时候，去爬的Porn网站。影片简介其中有一项就是影片时长。而在我后来的一段时间，发现很多影片网站是没有时长信息的。要知道影片的时长信息其实是非常重要的，需要作为一个筛选的条件。
于是开始尝试自己来用python编写获取在线视频时长的工具。而后这段时间在看了c和c#相关的知识后，开始有了更为深入的了解。也遇到了一些在python中没有详细了解过的问题。
在线视频现状 现在html5越来越流行，flash则已经确定在2020年后不再更新支持，每次打开chrome都会提醒我这一点。
而html5钦定的视频文件格式，就是mp4文件。所以从mp4文件来入手是非常好的。
mp4是一种文件格式。通过规范后的数据结构编排，生成文件。而软件则通过规范来解码文件，进行画面的绘制和输出。几乎所有的文件都是用c/c++的结构体来进行组装的。所以学习c语言对理解文件结构很有帮助。
可以参考苹果网站的文档查阅规范
我的解决方案 python 一开始我搜索已有的解决方案。
ffmpeg是一个很强的工具。跨平台且可以解析各种文件，但是ffmpeg需要单独部署，且不方便代码移植。我在用python通过命令行来调用的时候，发现速度奇慢。2小时才解析了200多条信息，且会无故hang住。对程序来说，也算是一个黑箱操作。无法调试。
随后发现ffmpeg-python这个库可以帮我操作，但还是觉得麻烦。我需要了解一套新的api，以及它所对应到的ffmpeg接口。
当你在在chrome中通过浏览器打开一个mp4文件的时候，会直接播放。且带有时长。
在之前了解爬虫的过程中，一些难搞的网站，是可以使用selenium来操作的。使用一个真正的浏览器来进行数据采集。于是我进行了尝试。
但是这样的效率同样不高。现在的浏览器越来越复杂和庞大。
那么浏览器是如何获取到时长的呢？肯定是有方法的。我只要了解原理，然后用python写出来即可。
首先需要了解http(s)请求中一个非常重要的header头，Range。
状态码为200系列，代表不同的请求成功了。而你带上&amp;quot;Range&amp;quot;:&amp;quot;bytes=0-7&amp;quot;请求去请求一个在线的mp4文件，正常情况下(大部分服务端都支持)会拿到206的状态码。代表你请求的数据成功了。你拿到了这个mp4前8个字节的数据。
于是我们的需求变成了从mp4文件中获取到存储时长信息的那几个字节。对照之前的苹果文档，我便写出了如下的代码。
# coding:utf-8 import struct import requests class Mp4info: def __init__(self, file): self.file = file self.seek = 0 self.duration = 0 self.s = requests.session() self.timeout = 6 self.s.headers = { &amp;#39;Connection&amp;#39;: &amp;#39;keep-alive&amp;#39;, &amp;#39;Accept&amp;#39;: &amp;#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&amp;#39;, &amp;#39;Accept-Encoding&amp;#39;: &amp;#39;gzip, deflate&amp;#39;, &amp;#39;Accept-Language&amp;#39;: &amp;#39;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7&amp;#39;, &amp;#39;User-Agent&amp;#39;: &amp;#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.</description></item><item><title>起码要能看懂c系列的代码</title><link>https://kentxxq.com/contents/%E8%B5%B7%E7%A0%81%E8%A6%81%E8%83%BD%E7%9C%8B%E6%87%82c%E7%B3%BB%E5%88%97%E7%9A%84%E4%BB%A3%E7%A0%81/</link><pubDate>Thu, 29 Aug 2019 11:35:00 +0000</pubDate><guid>https://kentxxq.com/contents/%E8%B5%B7%E7%A0%81%E8%A6%81%E8%83%BD%E7%9C%8B%E6%87%82c%E7%B3%BB%E5%88%97%E7%9A%84%E4%BB%A3%E7%A0%81/</guid><description>之前在一些文章里面就有说过。程序员是绕不过JavaScript的，即使有时候会恶心到人。。
而很多硬件的嵌入式开发，算法工程师，底层开发人员则真的可以做一辈子，而免疫JavaScript的侵扰。而JavaScript的每一个改动，都多多少少与c/c++有关。
可以说大神们用c/c++构建了现在数字化的底层逻辑。比c更底层的，晦涩难懂且开发效率低下，甚至人写的代码经常不如c编译器优化后的代码。比c高级的，性能下降概念繁多。和c同级别的，都没有c混得好。事实上c是事实标准。
前言 如果你从来没有了解过编程，而想学习c。那么去搜新手教程慢慢上手。
如果你有其他编程的基础。这篇文章能用来让你快速了解c代码。可以在你不得不去看c代码的时候，看懂他的意图。
基本了解 类型 二进制的c表达，需要用代码实现
# python用0b开头 a = 0b101 八进制
// c用0开头 int a = 08 # python用0o开头 数字0和字母o a = 0o516 十六进制
// c用0x开头 int a = 0x2A # python用0x开头 a = 0x2A 其中int是2个字节。long int是4个字节。
而float是4个字节。double是8个字节。long double是16个字节。注意在计算的时候，可能存在舍入误差。
char一个字符一个字节。
字符串则会比char多出来一个尾部的\0字节。
unsigned则代表没有符号位。例如int类型前面都会有一个符号位。没有符号位则会扩大int的可存储范围
附带补充一点知识。 数组
int a[10]; // 10个长度，空位补0 int b[10]={1,2,3,4,5}; // 自动检测到长度 int b[]={1,2,3,4,5}; 而字符串就这样表示
// 长度会是4，因为后面还有一个\0 char c[]=&amp;#34;C a&amp;#34;; 说几个常用的字符串函数吧
strcat合并 strcpy拷贝 strcmp比较 strlen拿到字符串长度 函数部分 函数其实没什么好说的。记得除了库函数(自带标准库),都要定义一下。才能用。 全局变量默认在静态存储区。 加了static的局部变量也在静态存储区。 register的变量会放在寄存器，会提高性能。 外部变量用extern声明，则可以在代码中使用。 预处理命令 #define PI 3.</description></item></channel></rss>