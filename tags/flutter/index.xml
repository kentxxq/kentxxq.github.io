<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>flutter on kentxxq Blog</title><link>https://kentxxq.com/tags/flutter/</link><description>Recent content in flutter on kentxxq Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sun, 19 May 2019 17:30:00 +0000</lastBuildDate><atom:link href="https://kentxxq.com/tags/flutter/index.xml" rel="self" type="application/rss+xml"/><item><title>flutter的入门之路</title><link>https://kentxxq.com/contents/flutter%E7%9A%84%E5%85%A5%E9%97%A8%E4%B9%8B%E8%B7%AF/</link><pubDate>Sun, 19 May 2019 17:30:00 +0000</pubDate><guid>https://kentxxq.com/contents/flutter%E7%9A%84%E5%85%A5%E9%97%A8%E4%B9%8B%E8%B7%AF/</guid><description>之前了解了一下xamarin，也写过关于xamarin的一篇记录。而flutter的用途也一样是用于开发跨平台UI。
flutter的编写语言是dart，爸爸是谷歌。所以推崇者比xamarin要多得多。大公司的跟进也更多。
如果连一个hello world都没有写过的话，那怎么能去对比呢？就像现在网上的用户对比手机，连手机都没有，就去云评测？
安装 请参考flutter官网。我反正是一次性就弄好了。
如果弄不好，重装系统或者弄个虚拟机吧。
说真的，开发环境都弄不好的话。说明你对操作系统和语言开发相关的知识太差了。
移动开发的hello world 之前在入坑xamarin初探就有对比各个框架的优劣。
既然是移动开发，那就照样写一个带控制闪光灯的hello world，没想到就坑到了。。
使用现成的依赖包 谷歌搜了一下，发现lamp和torch这两个包可以满足我的需求。
flutter的这些工具包是如何跨平台的呢？
先用android和ios的原生开发语言kolin/java和swift把功能实现好。 然后用dart打包好，提供给用户调用。 而经过我的躺坑，torch的ios编译无法通过。swift的编译不通过。貌似是版本之类问题。
而lamp也一样有坑。ios可以正常使用。Android中无响应。后面发现是因为用了老的api。所以找到了一个别人改进之后的版本。正常完成工作。
添加依赖 pubspec.yaml文件中如下:
dependencies: flutter: sdk: flutter # The following adds the Cupertino Icons font to your application. # Use with the CupertinoIcons class for iOS style icons. cupertino_icons: ^0.1.2 english_words: ^3.1.5 http: ^0.12.0+2 tip_dialog: ^2.0.0 lamp: git: url: https://github.com/a805429509/flutter_lamp.git 其中http是一个公共库上已经存好了的包。
而lamp则是直接导入我github上的地址。
代码实例 首先引入了lamp包。 定义了2个void方法，实现了开灯和关灯。 在页面上有2个按钮，onPressed对应到方法 import &amp;#39;package:flutter/material.</description></item></channel></rss>