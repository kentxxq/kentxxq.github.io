<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Blog - 标签 - 运维个人技术栈</title><link>https://kentxxq.com/tags/blog/</link><description>Blog - 标签 - 运维个人技术栈</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>admin@kentxxq.com (kentxxq)</managingEditor><webMaster>admin@kentxxq.com (kentxxq)</webMaster><lastBuildDate>Fri, 23 May 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kentxxq.com/tags/blog/" rel="self" type="application/rss+xml"/><item><title>archery手册</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/archery%E6%89%8B%E5%86%8C/</link><pubDate>Fri, 23 May 2025 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/archery%E6%89%8B%E5%86%8C/</guid><description>简介archery 是一个安全审计工具, 审计 mysql, redis, mongo 之类的数据产品 挂载 ssl 按照教程部署 archery 的 docker 版本 在 archery 创建 nginx/nginx.conf 文件 修改原配置里的 server_name 为新域名 注释 proxy_set_header X-Forwarded-Host $host:9123; 在</description></item><item><title>etcd手册</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/etcd%E6%89%8B%E5%86%8C/</link><pubDate>Sun, 27 Apr 2025 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/etcd%E6%89%8B%E5%86%8C/</guid><description>简介etcd 我个人理解是一个类似于 redis 的产品, 特点如下 键值对存储 分布式, 搭建集群比较简单 golang 写的, 内至于 k8s 安装etcd官方cluster安装文档</description></item><item><title>avalonia</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/avalonia/</link><pubDate>Fri, 28 Mar 2025 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/avalonia/</guid><description>命令创建 shell // 安装模板 dotnet new install Avalonia.Templates // 创建sln dotnet new avalonia.xplat -n ava // 创建csproj项目 dotnet new avalonia.mvvm -n ava 使用 shell // 构建 // 构建对应版本, 就去对应的项目执行就好了 dotnet publish -c</description></item><item><title>js知识碎片</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/js%E7%9F%A5%E8%AF%86%E7%A2%8E%E7%89%87/</link><pubDate>Thu, 06 Mar 2025 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/js%E7%9F%A5%E8%AF%86%E7%A2%8E%E7%89%87/</guid><description>简介记录 js 的知识碎片 api 用法 排序 js // 升序排序 arr.sort((a, b) =&amp;gt; a - b); // 返回正数，说明 a 比 b 大，a 在列表后面 // reverse 反序 // 降序排序 arr.sort((a, b) =&amp;gt; b - a);</description></item><item><title>处理异常</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8/</link><pubDate>Thu, 13 Feb 2025 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/%E5%A4%84%E7%90%86%E5%BC%82%E5%B8%B8/</guid><description>简介处理 csharp 的异常最佳实践. 参考文档 异常和异常处理 | Microsoft Learn 抛出异常 抛出 方法不能正常完成请求者的操作 无法继续执行 分类 非法参数: 超出范围的值 资源错误</description></item><item><title>AI搭建</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/ai%E6%90%AD%E5%BB%BA/</link><pubDate>Tue, 11 Feb 2025 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/ai%E6%90%AD%E5%BB%BA/</guid><description>简介经常刷抖音会刷到搭建 ai 之类的, 一直不想看. 觉得自己不会搭建, 结果今天公司就说要搭建一个试试&amp;hellip; 初步了解: ollama 是一个工具, 快速运</description></item><item><title>OPENAI概念</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/openai%E6%A6%82%E5%BF%B5/</link><pubDate>Tue, 07 Jan 2025 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/openai%E6%A6%82%E5%BF%B5/</guid><description><![CDATA[简介这里记录 AI 接口的相关信息 简单使用对话 csharp var model = &#34;gpt-4o-mini&#34;; // 豆包是ep-xxx-111这样的格式 var key = &#34;xxx-xxx-xxx-xxx&#34;; // 可以填写azure,gptus,或者兼容o]]></description></item><item><title>pnpm的monorepo实践</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/pnpm%E7%9A%84monorepo%E5%AE%9E%E8%B7%B5/</link><pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/pnpm%E7%9A%84monorepo%E5%AE%9E%E8%B7%B5/</guid><description><![CDATA[简介pnpm 的 monorepo 实践 创建 monorepo 项目 创建项目 mkdir w , cd w , 初始化 pnpm init, 会创建出 package.json 创建 pnpm-workspace.yaml yaml packages: - &#34;apps/*&#34; # app目录 /apps/dashboard /apps/website - &#34;packages/*&#34; # 公共包目录 /packages/charts /packages/ui 创建 .npmrc 配置文件 toml # 配]]></description></item><item><title>AOP编程</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/aop%E7%BC%96%E7%A8%8B/</link><pubDate>Fri, 27 Dec 2024 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/aop%E7%BC%96%E7%A8%8B/</guid><description>简介这里是 csharp 的 AOP 笔记 分类 类型 预处理, 添加源码. source generator 后处理, 添加二进制命令. IL 代码. 无运行时开销, 原生代码, 减少 jit 压力 调试麻烦, 构建时长增加,</description></item><item><title>python配置</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 23 Dec 2024 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python%E9%85%8D%E7%BD%AE/</guid><description>简介记录一下 python 的配置. 安装普通安装 搜索 winget search python 安装 winget install Python.Python.3.13 安装 pipx py -m pip install --user pipx 配置 pipx py -m pipx ensurepath 新工具安装 winget install --id=astral-sh.uv -e 配置源 运行完命令, 会显示配置文件路径</description></item></channel></rss>