<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mysql on kentxxq Blog</title><link>https://kentxxq.com/tags/mysql/</link><description>Recent content in mysql on kentxxq Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Tue, 06 Jul 1993 00:00:00 +0800</lastBuildDate><atom:link href="https://kentxxq.com/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>mysql_hugepages配置</title><link>https://kentxxq.com/contents/mysql_hugepages/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/mysql_hugepages/</guid><description>在linux中，内存一般是2kb-4kb每页，如果是大内存，那么pagetables将会非常大。cpu在查找使用内存的时候，会比较慢。使用hugepages，一个内存页可以设置为2MB-1GB。从而可以加快对内存的访问速度。2MB-4MB，是适用于100GB一下的内存。 1GB则适用于TB级别的内存容量。
开始配置mysql适用hugepages [mysql@centos1 ~]$ cat /proc/meminfo MemTotal: 1016460 kB MemFree: 557140 kB MemAvailable: 551864 kB Buffers: 948 kB Cached: 121004 kB SwapCached: 0 kB Active: 313228 kB Inactive: 83928 kB Active(anon): 275372 kB Inactive(anon): 6524 kB Active(file): 37856 kB Inactive(file): 77404 kB Unevictable: 0 kB Mlocked: 0 kB SwapTotal: 839676 kB SwapFree: 839676 kB Dirty: 0 kB Writeback: 0 kB AnonPages: 275228 kB Mapped: 28304 kB Shmem: 6692 kB Slab: 35700 kB SReclaimable: 14504 kB SUnreclaim: 21196 kB KernelStack: 2208 kB PageTables: 4344 kB NFS_Unstable: 0 kB Bounce: 0 kB WritebackTmp: 0 kB CommitLimit: 1347904 kB Committed_AS: 1719888 kB VmallocTotal: 34359738367 kB VmallocUsed: 5468 kB VmallocChunk: 34359730176 kB HardwareCorrupted: 0 kB AnonHugePages: 4096 kB HugePages_Total: 0 HugePages_Free: 0 HugePages_Rsvd: 0 HugePages_Surp: 0 Hugepagesize: 2048 kB DirectMap4k: 32704 kB DirectMap2M: 1015808 kB 上面可以看出没有启用hugepages，默认hugepages每页大小为2mb。 而当前的pagetables为4344kB</description></item><item><title>mysqladmin</title><link>https://kentxxq.com/contents/mysqladmin/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/mysqladmin/</guid><description> 这是一个非常好用的mysql工具，可以查看各种状态。
查看当前mysql数据库的运行状况 mysqladmin -u root -p status Uptime: 1368 Threads: 3 Questions: 85 Slow queries: 0 Opens: 116 Flush tables: 1 Open tables: 109 Queries per second avg: 0.062</description></item><item><title>mysql启动参数优化</title><link>https://kentxxq.com/contents/mysql%E5%90%AF%E5%8A%A8%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/mysql%E5%90%AF%E5%8A%A8%E5%8F%82%E6%95%B0%E4%BC%98%E5%8C%96/</guid><description>参数文件 [mysqld] ### # 基本相关配置 ### server-id=1 pid-file=/var/run/mysqld/mysqld.pid datadir=/var/lib/mysql socket=/var/lib/mysql/mysql.sock # 在linux中，文件可以进行ln，类似快捷方式。如果设置为1，则有可能会出现安全问题，默认配置中设置为0，进行关闭 symbolic-links=0 # 设置数据库字符集 character_set_server=utf8mb4 # 禁止MySQL对外部连接进行DNS解析，使用这一选项可以消除MySQL进行DNS解析的时间。但需要注意，如果开启该选项，则所有远程主机连接授权都要使用IP地址方式，否则MySQL将无法正常处理连接请求 skip-name-resolve character_set_filesystem=utf8mb4 # 统一使用小写的表名 lower_case_table_names = 1 ### # 日志配置 ### log-error=/var/log/mysqld.log # 二进制日志路径 log-bin=/tmp/logbin # 超过30天的binlog删除 expire_logs_days = 30 # 慢查询时间 超过1秒则为慢查询 long_query_time = 1 slow_query_log_file = /tmp/mysql-slow.log ### # 性能提升参数 ### # mysql最大连接数 查看max_used_connections，在最大值的70%左右最好 max_connections = 1000 # 官方：8 + (max_connections / 100)，上限100. 缓存的线程池不应该过多。 # 暂时我的业务高峰期，估计是200+的并发一直保持。50个应该足够 # 一般来说，大于4G的内存，预先缓存50个线程没有问题 thread_cache_size=10 # 表缓存分为多个区。5.</description></item><item><title>mysql备份恢复</title><link>https://kentxxq.com/contents/mysql%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/mysql%E5%A4%87%E4%BB%BD%E6%81%A2%E5%A4%8D/</guid><description>into outfile，适合在工作中导出指定的报表数据等 mysqldump轮流进行锁表 innobakcupex(暂时发现最好用的备份工具，且开源) into outfile&amp;mdash;load infile # 导入到指定的文件位置 select * into outfile &amp;#39;secure_file_priv&amp;#39; fields terminated by &amp;#39;,&amp;#39; from test # 导入指定的文件到表 load data infile &amp;#39;/var/lib/mysql-files/20170628&amp;#39; into table test fields terminated by &amp;#39;,&amp;#39;; # 注意 secure_file_priv路径位置，否则无法导出 # 注意 表必须存在，然后导入数据。 并不是删除表后可以重建表 mysqldump导出为sql脚本，可以直接运行进行恢复 # 指定表 mysqldump -u root -p databasename tablename &amp;gt; /tmp/20170628_databasename_tablename.sql # 指定数据库 mysqldump -u root -p --databases databasename1 databasename2 &amp;gt; /tmp/20170628_databasename.sql # 备份全部数据库 mysqldump -u root -p -all-databases &amp;gt; /tmp/20170628_databasename.</description></item><item><title>mysql常用参数以及命令</title><link>https://kentxxq.com/contents/mysql%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0%E4%BB%A5%E5%8F%8A%E5%91%BD%E4%BB%A4/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/mysql%E5%B8%B8%E7%94%A8%E5%8F%82%E6%95%B0%E4%BB%A5%E5%8F%8A%E5%91%BD%E4%BB%A4/</guid><description>参数 # 允许导出数据的文件路径 secure-file-priv 常用命令 # 查看当前mysql版本支持的存储引擎 show engine # 查看当前的参数 show variables show variables like &amp;#39;%engine%&amp;#39; # 查看安装的插件 show plugins; flush # 一台机器只能保持一定的连接，如出现max_connect_errors问题 flush hosts # 关闭当前的日志文件，后续的日志记录到新的文件 flush logs # 新建用户，修改权限之后，需要立即刷新，否则很有可能无法使用 flush privileges # 把内存中的数据写入到表内 flush tables # 锁住所有表以及解锁 flush tables with read lock unlock tables # 内存中的数据碎片整理 flush query cache reset # 清空所有缓存 reset query cache</description></item><item><title>mysql首次使用出现的问题</title><link>https://kentxxq.com/contents/mysql%E9%A6%96%E6%AC%A1%E4%BD%BF%E7%94%A8%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/mysql%E9%A6%96%E6%AC%A1%E4%BD%BF%E7%94%A8%E5%87%BA%E7%8E%B0%E7%9A%84%E9%97%AE%E9%A2%98/</guid><description>关于中文问题 默认安装后的sys库不进行修改 在新建数据库时,进行数据库字符集的设置,推荐utf8 关于mysql引擎问题 普遍使用innodb、myisam两种。前者支持事务、后者有更快的查询速度和索引 在建表后加engine=utf8 查看当前支持的mysql引擎 show engines 查看mysql安装后的初始密码 grep &amp;#39;temporary password&amp;#39; /var/log/mysqld.log 让指定用户可以进行远程连接 [root@centos1 test]# mysql -uroot -p Enter password: Welcome to the MySQL monitor. Commands end with ; or \g. Your MySQL connection id is 7 Server version: 5.7.18 MySQL Community Server (GPL) Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved. Oracle is a registered trademark of Oracle Corporation and/or its affiliates.</description></item></channel></rss>