<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>centos on kentxxq Blog</title><link>https://kentxxq.com/tags/centos/</link><description>Recent content in centos on kentxxq Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sat, 20 Jun 2020 16:05:00 +0800</lastBuildDate><atom:link href="https://kentxxq.com/tags/centos/index.xml" rel="self" type="application/rss+xml"/><item><title>linux之limit限制</title><link>https://kentxxq.com/contents/linux%E4%B9%8Blimit%E9%99%90%E5%88%B6/</link><pubDate>Sat, 20 Jun 2020 16:05:00 +0800</pubDate><guid>https://kentxxq.com/contents/linux%E4%B9%8Blimit%E9%99%90%E5%88%B6/</guid><description>介绍相关参数 file-max:系统所有的进程所能打开的最大文件数(文件描述符)
# 查看 cat /proc/sys/fs/file-max # 可在 /etc/sysctl.conf 中修改 # 可通过重启或sysctl -p生效 fs.file-max = 6553560 nr_open:单个进程可以打开的最大文件数
# 查看 cat /proc/sys/fs/nr_open # 可在 /etc/sysctl.conf 中修改 # 可通过重启或sysctl -p生效 fs.nr_open = 65535 nproc:用户能创建最大的进程数
nofile:用户能打开最大的文件数
# 查看用户限制 # 系统默认配置，但会被 limits.d/ 下的内容覆盖 cat /etc/security/limits.conf # 实际生效的设置 cat /etc/security/limits.d/20-nproc.conf # 查看单个进程限制 cat /proc/进程id/limits 示例 用户或组 限制级别 限制类型 值 root soft nofile 65535 root hard nproc 65535 soft超过会有警告 hard严格限制，不会超过此数值 问题现象 指定用户无法登陆，服务异常 # 可能出现的报错 su: cannot set user id resource temporarily unavailable Operation not permitted -bash: ulimit: open files: 无法修改 limit 值: 不允许的操作 因为test环境后台服务都部署在同一台机器，所以默认的4096是不够用的。导致无法继续接收新的请求且无法连接。</description></item><item><title>查看linux的相关信息</title><link>https://kentxxq.com/contents/linux%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/</link><pubDate>Sat, 04 Jan 2020 23:27:00 +0800</pubDate><guid>https://kentxxq.com/contents/linux%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF/</guid><description>记录一下linux常用的系统监控命令。
系统相关 系统信息 $ lsb_release -a LSB Version: :core-4.1-amd64:core-4.1-noarch Distributor ID: CentOS Description: CentOS Linux release 8.0.1905 (Core) Release: 8.0.1905 Codename: Core 系统os错误代码查询 perror 24 OS error code 24: Too many open files 服务器硬件 服务器型号 dmidecode | grep &amp;#39;Product Name&amp;#39; 查看主板的序列号 dmidecode | grep &amp;#39;Serial Number&amp;#39; 查看系统序列号 dmidecode -s system-serial-number 查看cpu信息 cat /proc/cpuinfo 现有内存数量和内存大小 dmidecode | grep -A16 &amp;#34;Memory Device&amp;#34; | grep &amp;#34;Size&amp;#34; |sed &amp;#39;s/^[ \t]*//&amp;#39; 查看内存信息 dmidecode -t memory # 或 cat /proc/meminfo 查看OEM信息 dmidecode -t 11 最大支持内存容量 dmidecode | grep &amp;#34;Maximum Capacity&amp;#34; |sed &amp;#34;s/^[ \t]*//&amp;#34; 查看磁盘信息 fdisk -l 监控 系统资源概况 top # glances界面更现代化，但centos需要yum安装，且当下20200206无法直接安装使用 glances 硬盘监控 # io的top命令 iotop 网络流量监控 # 用来进行查看各个网卡的总流量 nload # 用来监控各个进程的流量使用情况 nethogs # 图形化的工具，可以查看具体的端口情况 iptraf-ng 内存监控 # 查看内存使用状态 free -m # 查看内存变化 vmstat 间隔 监控次数 vmstat 2 2 更新 20200206: 新增系统监控</description></item><item><title>centos8的记录</title><link>https://kentxxq.com/contents/centos8%E7%9A%84%E8%AE%B0%E5%BD%95/</link><pubDate>Tue, 31 Dec 2019 16:36:00 +0800</pubDate><guid>https://kentxxq.com/contents/centos8%E7%9A%84%E8%AE%B0%E5%BD%95/</guid><description>centos7从我刚开始接触linux就开始用。所以在我使用的时候，老是不明白为什么会有人喜欢centos6。centos真是万年才更新一次大版本，导致许多的新特性不能使用。而我经常喜欢追热点。。所以这一次我要用上最新的centos8。
心路历程 在我听到rhel8的时候，就开始关注centos8。于是了解到centos总是要晚很多才会发布。而我的服务器因为墙的原因，不过半年我就要换。所以超级想找机会换centos8。
在整个rhel的产品线中，有一些非常有用的小知识。
Fedora是最前沿。非常贴近最新的linux内核主线。体验最新的技术选它肯定没错。并且有大量的红帽工程师处理问题，稳定性和问题修复相当于有了商业支持。我觉得非常适合喜欢rhel系列的用户作为桌面端。
rhel是收费的。在经过上游的一系列排错以后，会选取一个最稳定，特性最实用的版本。用来长期支持。购买了授权以后，会拥有无微不至的关怀。技术人员可以为你从源码级别修复你的疑难杂症。
centos则可以理解为rhel的开源版本。重点是免费。
centos8新特性 包管理yum和dnf 每个linux都有对应的包管理工具。而yum也因为rhel为人熟知。而我之前了解Fedora的过程中，也知道了centos7之后的包管理工具肯定会被dnf所替代。
[root@sgp ~]# which yum /usr/bin/yum [root@sgp ~]# ll /usr/bin/yum lrwxrwxrwx. 1 root root 5 May 14 2019 /usr/bin/yum -&amp;gt; dnf-3 [root@sgp ~]# 可以看到命令没有变，但是已经指向了dnf。所以下面说一下特点。
之前应该是用python2写的，现在开源在github上，用的python3。毕竟python2马上淘汰了，python3是未来。优化也更多。 性能方面说是更快了。其实任何项目重构以后我都认为架构会更合适，性能都会有优化。 可以删除正在使用的内核，升级内核更为方便了。 总体来说全方位都变强了。这也是为什么dnf会完全取代yum的原因。
内核升级 内核升级到了4.18，这也是我为什么要换成centos8的原因。
我的vps是在新加坡的。海外节点网络很是不稳定。bbr特性非常适合我。但是bbr需要内核版本4.9以上才行，所以打知道阿里云有了centOS8，我就打定主意要换。
开启bbr
echo &amp;#34;net.core.default_qdisc=fq&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf echo &amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf # 生效 sysctl -p # 验证 lsmod | grep bbr 内置python升级 历来python都是linux上不可或缺的一部分。几乎所有的标准版安装，都会带上它。
而之前都是python2，同时因为有大量的脚本和工具使用python2开发的。所以一直以来都是在缓慢推进演变过程。
而现在已经到时候了。许多的linux都升级到了python3。python2眼看就要被停止支持。所以升级也是理所当然的。
自带的是python3命令，3.6.8版本。算是很新的版本了。由于我一直都是使用python3，所以以后在服务器做一些测试调整，就不需要再通过pyenv等等工具来进行版本切换了。
总结 其他方面centOS8还有大量的更新，但都是一些让你体会不明显的改动。比如说更加完好的c/c++标准支持。因为centOS7这么多年走来，通过docker等等技术已经解决得差不多了。</description></item><item><title>记录一次实机安装Centos7</title><link>https://kentxxq.com/contents/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%AE%9E%E6%9C%BA%E5%AE%89%E8%A3%85centos7/</link><pubDate>Mon, 15 Apr 2019 11:59:00 +0800</pubDate><guid>https://kentxxq.com/contents/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E5%AE%9E%E6%9C%BA%E5%AE%89%E8%A3%85centos7/</guid><description>之前安装centos，都是在阿里云，虚拟机，还有hp-gen6-380的服务器上面安装。
也就是说实体机的操作经验，只有一个比较老的hp服务器。而这次使用普通pc机来安装，遇到了不少的问题。重装了大概有50次+吧，特意来记录一下。
安装经验 交代一下安装linux的经验
阿里云，虚拟机(这两个都属于虚拟环境了) hp-gen6-380(比较老的服务器机型) 家用e3v3+gpu750ti+华硕gaming主板(安装的是的fedora29，所有的组件都很新，问题也不少) 而这次安装在普通pc上，却遇到了问题。让我觉得还是很有必要系统性的了解一下。
遇到的问题 grub2-timeout问题 启动了开机按钮以后，一直卡住在这个界面，需要手动操作才能完成点击。
解决方案:
把超时时间设置为0，直接跳过内核选择界面。进入默认选中的第一个内核
### 路径 [root@YHcentos7 default]# pwd /etc/default ### 查看配置文件 [root@YHcentos7 default]# cat grub GRUB_TIMEOUT=0 GRUB_DISTRIBUTOR=&amp;#34;$(sed &amp;#39;s, release .*$,,g&amp;#39; /etc/system-release)&amp;#34; GRUB_DEFAULT=saved GRUB_DISABLE_SUBMENU=true GRUB_TERMINAL_OUTPUT=&amp;#34;console&amp;#34; GRUB_CMDLINE_LINUX=&amp;#34;crashkernel=auto rhgb quiet&amp;#34; GRUB_DISABLE_RECOVERY=&amp;#34;true&amp;#34; ### bios系统生成boot配置 [root@YHcentos7 default]# grub2-mkconfig -o /boot/grub2/grub.cfg GRUB_DISABLE_RECOVERY=&amp;#34;true&amp;#34; ### uefi系统生成boot配置 [root@YHcentos7 default]# grub2-mkconfig -o /boot/efi/EFI/centos/grub.cfg ### 重启 [root@YHcentos7 default]# reboot 如果你想知道为什么不能启用timeout进入指定的内核，请看下面
在重装了差不多5次以后，我其中的一次安装后，居然没有问题！导致我后续重装了大概50次，找到了原因。
我的u盘启动盘，是用rufus制作的。用的centosdvd版本的镜像。
插入u盘后，引导设备如下
可以看到，除了128gb的硬盘，还有2个可选项！
选择第一个，也就是UEFI启动，在后续的系统分区中，你必须给/boot/efi指定分区。分区文件类型为efi。如果没有的话，会报错no valid bootloader target device found centos 7 for a uefi installation</description></item><item><title>linux各个发行版本对比</title><link>https://kentxxq.com/contents/linux%E5%90%84%E4%B8%AA%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC%E5%AF%B9%E6%AF%94/</link><pubDate>Fri, 08 Mar 2019 10:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/linux%E5%90%84%E4%B8%AA%E5%8F%91%E8%A1%8C%E7%89%88%E6%9C%AC%E5%AF%B9%E6%AF%94/</guid><description>纠结过很久这个问题，结论最终是选择Centos。
写一篇日志，如果以后改变了选择，那肯定是因为随着系统的迭代，优缺点出现了不同。
各大主流发行版 Debian/Ubuntu系列 非常棒的发行版。用户量很大，更新也很及时。优点如下：
包管理工具采用apt，包数量很多，非常方便。 分unstable，testing，stable版本。unstable版本不稳定，但是紧跟内核。testing漏洞补丁一般是最慢，但是毕竟稳定不少。stable新特性最慢，但是坚如磐石。 对开发人员友好，很多的工具都在Debian进行ci测试。 Ubuntu是Debian的下游，说是很友好。但是漏洞修补慢，unstable的包很不稳定。
实在不知道为什么不用Debian。就为了一个官方版本的网易云音乐吗？
Centos/RHEL/Fedora系列 我见过用户量最大，文档最齐全(这里也包括博客等文档)的发行版。优点如下:
RHEL是最大的商业linux公司支持的。内核贡献度第一。技术实力强，稳。 文档最齐全，解决问题参考方案特别多。 企业用户量大，如果公司有钱，出问题一个电话给你商业支持。 兼容性好。如果有商业支持，会有各种神奇的补丁解决问题。 没钱就用Centos稳。有钱人就用RHEL，出问题有人接锅。
个人开发，追求内核更新速度，想体验最新特性用Fedora。
arch系列 爱折腾技术的极端分子。优点如下:
永远滚动更新。 追求精益求精，什么都自己来，包括自己编译。不要任何一点冗余。 官方文档是典范。甚至可以当linux的参考教程来用。 linux各版本的取舍 抛开需求，谈取舍是完全没有意义的。所以我的选择过程，可以给读者作参考。
人生苦短，我用python。所以我就不会用arch系列&amp;hellip;.等哪天财务自由再说吧 用linux最重要的就是，解决问题。不然为什么不用win10呢？所以我做了不同系统的尝试 我遇到的问题 尝试Debian的原因 vps里想要bbr特性，内核要上到4.9，总觉得Centos自己升级内核，没Debian的默认好。 使用testing或者unstale，类似滚动更新，一劳永逸啊！ apt的包多啊，比如ss-libev直接一下就能搜到。Centos还要去加copr源，跟进也不够及时 以后linux来办公，那服务器和工作站就相同环境了呀，Centos可能不好看 死心的原因 可能也是因为我太懒了，折腾不出来
按照官方教程，Cockpit在Centos上完全正常。Debian上登陆以后空白，出现一个send_async(好像是这个)的错误。找了一下资料，无果&amp;hellip; Centos安装图形化界面+Tightvnc，官方一步一步走，ok。debiban需要配置xstartup。这个xtartup脚本我折腾了好久，结果只能出来一个gnome经典界面，没有特效。。 另外一个xtartup配置出来了xfce的界面。。 效果不理想 我在用Centos的几年里，没有遇到过依赖问题。可能是我只用到了皮毛。但是Debian却在2天内让我遇到了。可能是包更新的速度，有的快，有的慢导致的，很头疼。 驱动问题。Centos因为维护时间长，变化不大。只要安装好了显卡驱动，一次就能跑好多年。而如果用了Debian，我看了一些文档，说nvidia的驱动都要改动内核还是什么的。很有可能哪次更新内核，就会挂。 这一点只是我的担心，没有实际操作过 如果我使用桌面版本，Fedora似乎更新，桌面使用更加友好。pipenv这样的工具，在官方github上对Fedora也有特别照顾。同时redhat的许多工程师，都是在致力于Fedora的bug修复，稳定性我也觉得不会比Debian的差到哪去。 个人原因 我一直以来都是接触的Centos,所以更加熟悉它。
服务器大量都是Centos系列，如果我客户端使用Fedora，对以后Centos服务器升级，也是有帮助的。这和我的工作内容有关。
读者可能遇到的问题 qq 推荐用chrome浏览器运行安卓版本qq就好了。或者参考docker-qq
听歌 推荐listen1，跨音乐平台收藏听歌！
office wps有linux版本了。</description></item><item><title>centos部署web服务（可拓展）</title><link>https://kentxxq.com/contents/%E9%83%A8%E7%BD%B2web%E6%9C%8D%E5%8A%A1%E5%8F%AF%E6%8B%93%E5%B1%95/</link><pubDate>Tue, 17 Apr 2018 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/%E9%83%A8%E7%BD%B2web%E6%9C%8D%E5%8A%A1%E5%8F%AF%E6%8B%93%E5%B1%95/</guid><description>学习了一下如何搭建大型的web应用，可拓展到承接大量的请求
架构说明 第一层购买域名以及云dns解析 第二层在这一个服务器搭建nginx的服务器。反向代理这一个服务器集群提供的服务 第三层在每一台服务器使用gunicorn，开启多个进程来处理flask请求 第四层flask连接到云内部的数据库，同时也就不用担心数据库的同步问题了。（费用如果很高，那说明你需求量很高，很赚钱了啊） 现在是云时代。我喜欢所有的东西都放在云上。除非是大企业在机房自建，不然够用了 域名部分我就不说了。。一般在对应的云上面找到，然后点点点就ok
安装环境 # 设置nginx包 # root @ kentxxq in /etc/yum.repos.d [14:17:01] $ cat nginx.repo [nginx] name=nginx repo baseurl=http://nginx.org/packages/centos/7/$basearch/ gpgcheck=0 enabled=1 # 安装nginx yum install nginx # 安装python curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash # 添加到.bash_profile的尾部 export PATH=&amp;#34;/root/.pyenv/bin:$PATH&amp;#34; eval &amp;#34;$(pyenv init -)&amp;#34; eval &amp;#34;$(pyenv virtualenv-init -)&amp;#34; # 安装指定版本的python，安装所需的包 pyenv install 3.6.3 pyenv global 3.6.3 # 安装所需要的包 pip install gevent pip install flask pip install gunicorn 配置文件 ######################## # nginx配置文件 ######################## $ root @ kentxxq in /etc/nginx [14:28:10] $ cat nginx.</description></item><item><title>centos定时时间同步</title><link>https://kentxxq.com/contents/%E5%AE%9A%E6%97%B6%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/%E5%AE%9A%E6%97%B6%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</guid><description># 安装ntp软件 yum install ntp ntpdate # 与上海大学时间服务器进行时间同步 ntpdate ntp.shu.edu.cn # 每一小时进行一次时间同步、且写入硬件时间 crontab -e 0 * * * * /usr/sbin/ntpdate ntp.shu.edu.cn 0 * * * * /usr/sbin/hwclock -w</description></item><item><title>centos搭建vsftpd服务</title><link>https://kentxxq.com/contents/centos%E6%90%AD%E5%BB%BAvsftpd%E6%9C%8D%E5%8A%A1/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/centos%E6%90%AD%E5%BB%BAvsftpd%E6%9C%8D%E5%8A%A1/</guid><description> centos7默认最小安装中没有ftp服务。 vsftpd配置文件官方文档
下载安装后自动运行 yum install vsftpd 配置文件路径 [root@centos1 vsftpd]# pwd /etc/vsftpd [root@centos1 vsftpd]# ls ftpusers user_list vsftpd.conf vsftpd_conf_migrate.sh [root@centos1 vsftpd]# 注意事项 ftpusers是黑名单！所有名单中的用户名，都无法登陆ftp！
关于user_list：
userlist_enable Default: NO userlist_deny Default: YES
默认user_list设置为不启用。一旦启用userlist_enable，则文件生效
如果user_list生效，则userlist_deny则默认为YES，user_list变为一个黑名单！ 默认安装后的目录 anonymous用户的默认根目录为/var/ftp,应该给予/var/ftp路径所有用户的写权限chmod a+w /var/ftp
anonymous用户可以上传的目录/var/ftp/pub。
如果用root用户登陆，则可以访问任何路径！
只能下载不能上传，上传需要启用参数anon_upload_enable=YES和anon_mkdir_write_enable=YES
快速创建可以匿名上传下载的ftp 编辑/etc/vsftpd/vsftpd.conf
修改默认端口 listen_port=2121 可以匿名创建文件夹 anon_mkdir_write_enable=YES 可以匿名上传 anon_upload_enable=YES 匿名上传的文件默认权限 anon_umask=011 匿名用户可以进行删除操作 anon_other_write_enable=yes chmod 777 /var/ftp/pub 匿名的所有操作都是在下面这个文件夹中进行，/var/ftp目录只能进行读取
在ftpusers和user_list中删除root,方便root用户ftp登录进行管理操作
阿里云特殊设置 在vsftpd.config中加入下面的参数 pasv_enable=YES pasv_max_port=7000 pasv_min_port=6000 安全组中，加入6000-7000端口</description></item><item><title>yum的配置和使用</title><link>https://kentxxq.com/contents/yum%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/yum%E7%9A%84%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</guid><description> yum是用来安装、更新、卸载、管理软件包的工具。rpm安装包因为存在依赖其他rpm软件包的问题，yum用来更加方便的解决这些问题。
在/etc中存在有
yum 版本以及插件信息 yum.conf 配置信息 yum.repos.d 配置从哪个源来对比进行操作 常用命令 # 安装 yum install software # 卸载 yum remove software # 查看所有源 yum repolist # 查看所有可用的源 yum repolist enable 解决国外源,下载速度慢的问题,使用阿里云 wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo # 163网易源 http://mirrors.163.com/.help/CentOS7-Base-163.repo 只需要更新指定的安全补丁 # 老版本安装yum插件即可、新版本centos7直接使用 yum install yum-security # 使用:检查安全更新 yum --security check-update # 只安装安全更新 yum update --security # 列出更新的详细信息 yum info-security software_name</description></item><item><title>搭建基本的centos环境</title><link>https://kentxxq.com/contents/%E6%90%AD%E5%BB%BA%E5%9F%BA%E6%9C%AC%E7%9A%84%E7%8E%AF%E5%A2%83/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/%E6%90%AD%E5%BB%BA%E5%9F%BA%E6%9C%AC%E7%9A%84%E7%8E%AF%E5%A2%83/</guid><description>第一步&amp;ndash;创建virtual box虚拟机 第二步&amp;ndash;默认安装、最小化安装 使用的iso为CentOS-7-x86_64-Everything-1611.iso centos官网下载
配置root用户密码、新建用户等
第三步&amp;ndash;网卡配置 ssh root@192.168.0.222 cd /etc/sysconfig/network-scripts ifcfg-enp0s3 使用的网卡
ifcfg-lo 回环
配置ifcfg-enp0s3,其中UUID无需更改
[root@centos1 network-scripts]# cat ifcfg-enp0s3 TYPE=Ethernet BOOTPROTO=static DEFROUTE=yes PEERDNS=yes PEERROUTES=yes IPV4_FAILURE_FATAL=no IPV6INIT=yes IPV6_AUTOCONF=yes IPV6_DEFROUTE=yes IPV6_PEERDNS=yes IPV6_PEERROUTES=yes IPV6_FAILURE_FATAL=no IPV6_ADDR_GEN_MODE=stable-privacy NAME=enp0s3 UUID=774dda00-53bc-49d3-9b7a-ea38e397ba84 DEVICE=enp0s3 ONBOOT=yes IPADDR=192.168.0.222 NETMASK=255.255.255.0 GATEWAY=192.168.0.1 重启服务即可正常使用
[root@centos1 network-scripts]# service network restart Restarting network (via systemctl): [ 确定 ] [root@centos1 network-scripts]# ping baidu.com PING baidu.com (111.13.101.208) 56(84) bytes of data. 64 bytes from localhost (111.13.101.208): icmp_seq=1 ttl=54 time=38.</description></item><item><title>远程免密ssh</title><link>https://kentxxq.com/contents/%E8%BF%9C%E7%A8%8B%E5%85%8D%E5%AF%86ssh/</link><pubDate>Tue, 06 Jul 1993 00:00:00 +0800</pubDate><guid>https://kentxxq.com/contents/%E8%BF%9C%E7%A8%8B%E5%85%8D%E5%AF%86ssh/</guid><description># 生成公钥和密钥 kent’s MacBook Pro:bin kentxxq$ ssh-keygen -t rsa Generating public/private rsa key pair. Enter file in which to save the key (/Users/user/.ssh/id_rsa): #回车 Enter passphrase (empty for no passphrase): #密码 Enter same passphrase again: #密码 Your identification has been saved in /Users/user/.ssh/id_rsa. Your public key has been saved in /Users/user/.ssh/id_rsa.pub. The key-s fingerprint is: SHA256:4/PI3lPzkOvli9Vvaz0WRAd8WE4m6gtVW7ARILmeLU0 kentxxq@kent’s MacBook Pro The keys randomart image is: +---[RSA 2048]----+ | ...oB*=| | .. oo@o| | .</description></item></channel></rss>