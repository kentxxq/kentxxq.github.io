<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>c# on kentxxq Blog</title><link>https://kentxxq.com/tags/c#/</link><description>Recent content in c# on kentxxq Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Tue, 17 Dec 2019 11:45:00 +0000</lastBuildDate><atom:link href="https://kentxxq.com/tags/c#/index.xml" rel="self" type="application/rss+xml"/><item><title>csv转xlsx文件</title><link>https://kentxxq.com/contents/csv%E8%BD%ACxlsx%E6%96%87%E4%BB%B6/</link><pubDate>Tue, 17 Dec 2019 11:45:00 +0000</pubDate><guid>https://kentxxq.com/contents/csv%E8%BD%ACxlsx%E6%96%87%E4%BB%B6/</guid><description>Excel是大家办公最常遇到的文件之一。一旦需要具体数据的时候，客户都要求这个文件。
而我用plsql从oracle数据库中查出来以后，一般都是直接导出csv文件。需要手动去wps导入csv，转换成xlsx文件。有时候文件实在是太多了，麻烦。
于是就有了这个文章。
python代码 pyexcel版本 这个版本代码最简单的，缺点就是非常慢。100W行的数据[1,2,3,4][2,3,4,5]&amp;hellip;需要2分钟！
# 你还需要安装pyexcel-xlsx from pyexcel import get_sheet sheet = get_sheet(file_name=&amp;#39;/Users/kentxxq/test.csv&amp;#39;) sheet.save_as(filename=&amp;#39;/Users/kentxxq/test.xlsx&amp;#39;) print(sheet.number_of_rows()) print(&amp;#39;ok&amp;#39;) pyexcelerate版本 这个看了一个它在测试，确实很快。大概60s。还是不太理想。
import time from pyexcelerate import Workbook import csv import os from multiprocessing.pool import Pool def csv_to_xlsx(file): start = time.time() print(&amp;#39;开始处理:&amp;#39;+os.path.split(file)[1]) with open(file, &amp;#39;r&amp;#39;, encoding=&amp;#39;gbk&amp;#39;) as f: lines = list(csv.reader(f)) wb = Workbook() wb.new_sheet(&amp;#39;sheet1&amp;#39;, data=lines) wb.save(file + &amp;#39;.xlsx&amp;#39;) end = time.time() duration = end-start print(os.path.split(file)[1] + &amp;#39;处理完成:&amp;#39; + str(duration) + &amp;#39;秒&amp;#39;) if __name__ == &amp;#39;__main__&amp;#39;: start = time.</description></item></channel></rss>