<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Python - 标签 - 运维个人技术栈</title><link>https://kentxxq.com/tags/python/</link><description>Python - 标签 - 运维个人技术栈</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>admin@kentxxq.com (kentxxq)</managingEditor><webMaster>admin@kentxxq.com (kentxxq)</webMaster><lastBuildDate>Mon, 14 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kentxxq.com/tags/python/" rel="self" type="application/rss+xml"/><item><title>python-ARP攻击</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python-arp%E6%94%BB%E5%87%BB/</link><pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python-arp%E6%94%BB%E5%87%BB/</guid><description><![CDATA[简介python 的 ARP 攻击脚本. 内容 python # coding:utf-8 from scapy.all import Ether, ARP, sendp from typing import Tuple import os import pprint import socket import netifaces import nmap import time def get_localhost_mac_address_and_gateway_ip(localhost_ip: str) -&gt; Tuple[str, str]: tmp_data = localhost_ip.split(&#34;.&#34;)[0:3] tmp_data.append(&#34;1&#34;) gateway_ip = &#34;.&#34;.join(tmp_data) for gateway in netifaces.gateways().get(len(netifaces.gateways())): if gateway[0] == gateway_ip: mac_id = gateway[1] mac_addr = netifaces.ifaddresses(mac_id).get(netifaces.AF_LINK)[0][&#34;addr&#34;].upper() return]]></description></item><item><title>python-工具脚本</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python-%E5%B7%A5%E5%85%B7%E8%84%9A%E6%9C%AC/</link><pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python-%E5%B7%A5%E5%85%B7%E8%84%9A%E6%9C%AC/</guid><description><![CDATA[简介python 的小工具脚本和示例. 内容 pywinrm远程操作 windows 机器 python host = winrm.Session( &#34;10.0.216.207&#34;, (&#34;主机\\用户名&#34;, &#34;密码&#34;]]></description></item><item><title>python</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/point/python/</link><pubDate>Sat, 01 Jul 2023 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/point/python/</guid><description>python 是一门非常流行的编程语言. 要点: 生态强大, 特别在 ai 方便 解释执行, 强类型</description></item><item><title>python技巧-类</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python%E6%8A%80%E5%B7%A7-%E7%B1%BB/</link><pubDate>Tue, 26 Nov 2019 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python%E6%8A%80%E5%B7%A7-%E7%B1%BB/</guid><description>简介最近把手上的事情都忙完了。准备来好好巩固自己的 python 知识。为什么标题是技巧呢，因为这部分是它和其他语言最大的不同，或者说特点。要玩得 6，不熟</description></item><item><title>二进制和位运算</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%92%8C%E4%BD%8D%E8%BF%90%E7%AE%97/</link><pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%92%8C%E4%BD%8D%E8%BF%90%E7%AE%97/</guid><description>简介以前对于位运算, 二级制了解的比较少. 这里统一记录一下使用和理解. 主要使用 python 做示范. 内容 进制2 进制：逢 2 进 1 8 进制：逢 8 进 1 16 进制：逢 16 进</description></item><item><title>python的文件项目打包</title><link>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python%E7%9A%84%E6%96%87%E4%BB%B6%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85/</link><pubDate>Thu, 19 Oct 2017 00:00:00 +0000</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/posts/%E7%AC%94%E8%AE%B0/python%E7%9A%84%E6%96%87%E4%BB%B6%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85/</guid><description>简介打算自己做一个 python 项目, 然后推到 pypi 上去. 这次的目的记录写一个及其简单的过程，所以如果有具体问题，请看官方文档。 先看目录结构 python $ tree . ├── MANIFEST.in</description></item></channel></rss>