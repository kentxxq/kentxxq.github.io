<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>tools - 标签 - 运维个人技术栈</title><link>https://kentxxq.com/tags/tools/</link><description>tools - 标签 - 运维个人技术栈</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>admin@kentxxq.com (kentxxq)</managingEditor><webMaster>admin@kentxxq.com (kentxxq)</webMaster><lastBuildDate>Fri, 02 Jun 2023 14:45:00 +0800</lastBuildDate><atom:link href="https://kentxxq.com/tags/tools/" rel="self" type="application/rss+xml"/><item><title>Task的使用</title><link>https://kentxxq.com/contents/task%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 02 Jun 2023 14:45:00 +0800</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/contents/task%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>总结一下在 c#中几种 Task 的用法 对比 方法 适用场景 Task.Run 通用，适用异步 Task.Factory.StartNew(TaskCreationOptions.LongRunning) 钻牛角尖 下面全都是你想用 Task.Factory.StartNew 的必备条件 你想要新启一个线程来运行，因为会堵塞太久。</description></item><item><title>网络命令行工具-ken</title><link>https://kentxxq.com/contents/%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7ken/</link><pubDate>Mon, 30 Aug 2021 17:42:00 +0800</pubDate><author><name>kentxxq</name></author><guid>https://kentxxq.com/contents/%E7%BD%91%E7%BB%9C%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7ken/</guid><description>在日常的使用场景中，总是不得不接触各种各样的命令行工具。而在使用的过程中，多多少少有一些不好用的地方。马上就要发布到NET6，终于做到了在m</description></item></channel></rss>