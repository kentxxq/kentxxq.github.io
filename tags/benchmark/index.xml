<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>benchmark on kentxxq Blog</title><link>https://kentxxq.com/tags/benchmark/</link><description>Recent content in benchmark on kentxxq Blog</description><generator>Hugo -- gohugo.io</generator><language>zh</language><lastBuildDate>Sat, 14 Aug 2021 10:00:00 +0000</lastBuildDate><atom:link href="https://kentxxq.com/tags/benchmark/index.xml" rel="self" type="application/rss+xml"/><item><title>benchmark的数学知识</title><link>https://kentxxq.com/contents/benchmark%E7%9A%84%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86/</link><pubDate>Sat, 14 Aug 2021 10:00:00 +0000</pubDate><guid>https://kentxxq.com/contents/benchmark%E7%9A%84%E6%95%B0%E5%AD%A6%E7%9F%A5%E8%AF%86/</guid><description>程序性能总是一个永恒的话题。各个系统、编程语言、算法、io逻辑，总是不停的对比。今天在dotnet闲逛的时候，看到了官方做的一个性能评测库，但是指标我却看不懂。于是就看了一会儿相关知识，准备记录一下。
程序说明 抄了一个官方的demo。很简单，就是在对比md5和sha256两者的性能。
using System; using System.Security.Cryptography; using BenchmarkDotNet.Attributes; using BenchmarkDotNet.Jobs; using BenchmarkDotNet.Running; namespace Cli { public class Md5VsSha256 { private const int N = 10000; private readonly byte[] data; private readonly SHA256 sha256 = SHA256.Create(); private readonly MD5 md5 = MD5.Create(); public Md5VsSha256() { data = new byte[N]; new Random(42).NextBytes(data); } [Benchmark] public byte[] Sha256() =&amp;gt; sha256.ComputeHash(data); [Benchmark] public byte[] Md5() =&amp;gt; md5.ComputeHash(data); } class Program { static void Main(string[] args) { var summary = BenchmarkRunner.</description></item></channel></rss>